name: deploy-production
on:
  push:
    tags: [v*]
jobs:
  deploy-production:
    runs-on: ubuntu-latest
    env:
      REPO_NAME_SLUG: idostarter
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Web Apps
        run: yarn build
        env:
          PORT: 3000
          HTTPS: false
          REACT_APP_INFURA_ID: 4bf032f2d38a4ed6bb975b80d6340847
          REACT_APP_EASY_AUCTION_MAINNET_ADDRESS: '0x0b7fFc1f4AD541A4Ed16b40D8c37f0929158D101'
          REACT_APP_EASY_AUCTION_RINKEBY_ADDRESS: '0xC5992c0e0A3267C7F75493D0F717201E26BE35f7'
          REACT_APP_EASY_AUCTION_XDAI_ADDRESS: '0x0b7fFc1f4AD541A4Ed16b40D8c37f0929158D101'
          REACT_APP_EASY_AUCTION_POLYGON_ADDRESS: '0x0b7fFc1f4AD541A4Ed16b40D8c37f0929158D101'

      - name: 'Deploy to IPFS with infura'
        run: yarn ipfs-publish
